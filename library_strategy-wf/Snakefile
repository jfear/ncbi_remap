""" Library Strategy processing workflow

`Library Strategy` is the description of what kind of sequencing was done
(i.e., RNA-Seq, ChIP-Seq, WGS). The SRA uses higher level terms that may not
be the most accurate description of a sample. I would like to provide more
detailed descriptions of the sample if they are availabled in the free text
metadata. I also want to validate the high level metadata, to ensure that
submissions with a mixture of strategies (e.g., RNA-Seq and ChIP-Seq) did not
swap any sample labels.

I will focus on RNA-Seq samples for downstream analysis, so it is most
important that these samples are correctly identified. I will use a data
driven machine learning approach. I will use various features from the
`prealn-wf` with a cross validation approach to confidently identify samples
that behave as expected.

Rules
-----
targets
    create a list of desired output files
free_text_library_strategy
    Parse free text for additional library strategy information
munge_library_strategy_from_mongo
    Pulls out the author supplied metadata field for library strategy
build_library_strategy_feature_set
    Creates a Feature matrix for machine learning library strategy
random_forest_library_strategy
    Random Forest to learn library startegy
select_library_strategy
    Takes library strategy annotations from SRA, metadata, random forest and
    selects the best category.

"""
rule targets:
    input:
        '../output/library_strategy-wf/select_library_strategy.parquet'


rule free_text_library_strategy:
    output: '../output/library_strategy-wf/free_text_library_strategy.parquet'
    script: 'scripts/free_text_library_strategy.py'


rule munge_library_strategy_from_mongo:
    output:
        '../output/library_strategy-wf/munge_library_strategy_from_mongo.parquet',
        '../output/library_strategy-wf/mongo_library_strategy_summary_table.tsv',
    script: 'scripts/munge_library_strategy_from_mongo.py'


rule build_library_strategy_feature_set:
    input: "../output/sra.h5"
    output: "../output/library_strategy-wf/build_library_strategy_feature_set.parquet"
    script: "scripts/build_library_strategy_feature_set.py"


rule random_forest_library_strategy:
    input:
        labels=rules.munge_library_strategy_from_mongo.output[0],
        features=rules.build_library_strategy_feature_set.output[0],
    output:
        learning_curve='../output/library_strategy-wf/random_forest_library_strategy_learning_curve.svg',
        metrics='../output/library_strategy-wf/random_forest_library_strategy_metrics.tsv',
        feature_importances='../output/library_strategy-wf/random_forest_library_strategy_feature_importance.tsv',
        pred='../output/library_strategy-wf/random_forest_library_strategy.parquet',
        pred_other='../output/library_strategy-wf/random_forest_library_strategy_other.parquet',
    script: 'scripts/random_forest_library_strategy.py'


rule select_library_strategy:
    input:
        sra=rules.munge_library_strategy_from_mongo.output[0],
        free_text=rules.free_text_library_strategy.output[0],
        forest=rules.random_forest_library_strategy.output['pred'],
        other=rules.random_forest_library_strategy.output['pred_other'],
    output: '../output/library_strategy-wf/select_library_strategy.parquet'
    script: 'scripts/select_library_strategy.py'
