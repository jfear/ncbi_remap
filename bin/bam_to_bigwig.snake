""" Builds a swarm file for converting bam to bigwig files using a list of SRAs.

Jean has provided me with a list of 318 SRA IDs that we would like to convert
from BAM to BigWig for visualization on UCSC genome browser. 

"""
shell.prefix('set -eo pipefail;')
workdir: '.'

localrules: all

# Get List of SRAs
FNAME='312_sample_golden_set_2016-06-14'
with open('../data/{fname}.txt'.format(fname=FNAME), 'r') as SRAs:
    sras = [x.strip() for x in SRAs]

#sras = sras[:2]

# Rules
rule all:
    """ Build Targets """
    input: expand('../output/{fname}.{strand}.deeptools.merged.bw', fname=FNAME, strand=['Sf', 'Sr'])
    #input: expand('/data/Oliverlab/project/remap/result/realignment/result/BW/{sample}/{sample}.{strand}.deeptools.bw', sample=sras[0], strand=['Sf', 'Sr'])

rule bamToBigWig:
    input: '/data/Oliverlab/project/remap/result/realignment/result/BAM/{sample}/{sample}.bam'
    output: '/data/Oliverlab/project/remap/result/realignment/result/BW/{sample}/{sample}.{strand,Sf|Sr}.deeptools.bw'
    run:
        if (wildcards.strand) == 'Sf':
            # Exlude alignments on minus strand
            flag = '--filterRNAstrand forward'
        else:
            # Only inlude alignments on minus strand
            flag = '--filterRNAstrand reverse'

        shell("""
        cd /lscratch/$SLURM_JOBID
        cp {{input[0]}} .

        if [ -e {{input[0]}}.bai ]; then
            cp {{input[0]}}.bai .
        else
            samtools index {{wildcards.sample}}.bam
        fi

        source activate deeptools;
        bamCoverage --binSize 10 {flag} --bam {{wildcards.sample}}.bam -o {{output[0]}}
        source deactivate;
        """.format(flag=flag))


def _mergeBW(wildcards):
    return expand('/data/Oliverlab/project/remap/result/realignment/result/BW/{sample}/{sample}.{strand}.deeptools.bw', sample=sras, strand=wildcards.strand)

rule mergeBW:
    input: bw = _mergeBW,
           chrom = '../output/dmel.chrom.sizes'
    output: '{prefix}.{strand,Sf|Sr}.deeptools.merged.bw'
    shell: """
    module load ucsc
    export LC_COLLATE=C

    # Create UCSC friendly merged bigwig
    bigWigMerge {input.bw} stdout | \\
    awk '{{if( $1 == "2L" || $1 == "2R" || $1 == "3L" || $1 == "3R"  || $1 == "4" || $1 == "X" || $1 == "Y"){{print "chr"$0}}}}' | \\
    sort -k1,1 -k2,2n > /lscratch/$SLURM_JOBID/tmp.bg

    bedGraphToBigWig /lscratch/$SLURM_JOBID/tmp.bg {input.chrom} {output[0]} 
    """

rule ucscChromSizes:
    """ Creates a UCSC friendly version of chrom sizes. 

    UCSC uses chromosome names with 'chr' in the the title, which flybase does
    not. Here I convert the flybase chromsizes file to use chr. I also filter
    out the main chromosome arms.

    """
    input: '/data/Oliverlab/data/FlyBase/FB2015_04/dmel.chrom.sizes'
    output: temp('../output/dmel.chrom.sizes')
    shell:"""
    export LC_COLLATE=C

    # Create a UCSC friendly chrom sizes
    awk '{{if( $1 == "2L" || $1 == "2R" || $1 == "3L" || $1 == "3R"  || $1 == "4" || $1 == "X" || $1 == "Y"){{print "chr"$0}}}}' {input[0]} | \\
    sort -k1,1 -k2,2n > {output[0]}
    """
