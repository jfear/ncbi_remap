from ncbi_remap.queue import Queue

queue = Queue(targets="../output/rnaseq-wf/done")

rule run_all:
    input: 
        "../output/agg-rnaseq-wf/gene_counts.done",
        "../output/agg-rnaseq-wf/junction_counts.done",
        "../output/agg-rnaseq-wf/segment_counts.done",
        "../output/agg-rnaseq-wf/fusion_counts.done",
        "../output/agg-rnaseq-wf/intergenic_counts.done",
        "../output/agg-rnaseq-wf/tpm_gene_counts.tsv",
        "../output/agg-rnaseq-wf/gene_counts_reduced.parquet",

################################################################################
# Aggregate Counts Tables
################################################################################
rule agg_gene_counts:
    input: expand("../output/rnaseq-wf/samples/{srx}/{srx}.bam.counts", srx=queue.srxs)
    output: "../output/agg-rnaseq-wf/gene_counts.done"
    params: "../output/agg-rnaseq-wf/gene_counts.tsv",
    threads: 12
    group: "aggregate"
    resources:
        mem_gb=lambda wildcards, attempt: attempt * 24,
        time_hr=lambda wildcards, attempt: attempt * 4
    script: "scripts/agg_feature_counts.py"


rule agg_junction_counts:
    input: expand("../output/rnaseq-wf/samples/{srx}/{srx}.bam.counts.jcounts", srx=queue.srxs)
    output: "../output/agg-rnaseq-wf/junction_counts.done"
    params: "../output/agg-rnaseq-wf/junction_counts.tsv",
    threads: 12
    group: "aggregate"
    resources:
        mem_gb=lambda wildcards, attempt: attempt * 24,
        time_hr=lambda wildcards, attempt: attempt * 4
    script: "scripts/agg_junction_counts.py"


rule agg_segment_counts:
    input: expand("../output/rnaseq-wf/samples/{srx}/{srx}.bam.exon_segments.counts", srx=queue.srxs)
    output: "../output/agg-rnaseq-wf/segment_counts.done"
    params: "../output/agg-rnaseq-wf/segment_counts.tsv",
    threads: 12
    group: "aggregate"
    resources:
        mem_gb=lambda wildcards, attempt: attempt * 24,
        time_hr=lambda wildcards, attempt: attempt * 4
    script: "scripts/agg_feature_counts.py"


rule agg_fusion_counts:
    input: expand("../output/rnaseq-wf/samples/{srx}/{srx}.bam.exon_fusions.counts", srx=queue.srxs)
    output: "../output/agg-rnaseq-wf/fusion_counts.done"
    params: "../output/agg-rnaseq-wf/fusion_counts.tsv",
    threads: 12
    group: "aggregate"
    resources:
        mem_gb=lambda wildcards, attempt: attempt * 24,
        time_hr=lambda wildcards, attempt: attempt * 4
    script: "scripts/agg_feature_counts.py"


rule agg_intergenic_counts:
    input: expand("../output/rnaseq-wf/samples/{srx}/{srx}.bam.intergenic.counts", srx=queue.srxs)
    output: "../output/agg-rnaseq-wf/intergenic_counts.done"
    params: "../output/agg-rnaseq-wf/intergenic_counts.tsv",
    threads: 12
    group: "aggregate"
    resources:
        mem_gb=lambda wildcards, attempt: attempt * 24,
        time_hr=lambda wildcards, attempt: attempt * 4
    script: "scripts/agg_feature_counts.py"


################################################################################
# TPM Normalize Counts
################################################################################
rule tpm_gene_counts:
    input: 
        _=rules.agg_gene_counts.output[0],
        counts=rules.agg_gene_counts.params[0],
        gene_lengths="../output/gene_ts_lengths.tsv"
    output: "../output/agg-rnaseq-wf/tpm_gene_counts.tsv"
    script: "scripts/tpm.py"

################################################################################
# Samples
################################################################################
rule feature_pca_gene_counts:
    """Rotate gene-space to principal components"""
    input: rules.tpm_gene_counts.output[0]
    output: 
        scaler="../output/agg-rnaseq-wf/feature_scaler.pkl",
        reducer="../output/agg-rnaseq-wf/feature_pca_reducer.pkl",
        reduced="../output/agg-rnaseq-wf/feature_principal_components.parquet"
    script: "scripts/feature_pca_gene_counts.py"


rule feature_pca_select_components:
    """Select PCs reducing gene-space dimensions"""
    input:
        model=rules.feature_pca_gene_counts.output.reducer,
        reduced_values=rules.feature_pca_gene_counts.output.reduced
    output:
        variance="../output/agg-rnaseq-wf/feature_pca_explained_variance.svg",
        selected_values="../output/agg-rnaseq-wf/feature_pca_select_components.parquet"
    params: n_comp=2_000
    script: "scripts/feature_pca_select_components.py"


rule feature_cov:
    """Calculate Cov and Cov^-1 for gene prinicpal components"""
    input: rules.feature_pca_select_components.output.selected_values
    output: 
        model="../output/agg-rnaseq-wf/feature_cov_model.pkl",
        cov="../output/agg-rnaseq-wf/feature_cov.pkl",
        inv_cov="../output/agg-rnaseq-wf/feature_inverse_cov.pkl",
    script: "scripts/feature_cov.py"


rule sample_ball_tree:
    """Build Ball Tree to search for KNN samples"""
    input:
        selected_values=rules.feature_pca_select_components.output.selected_values,
        vi=rules.feature_cov.output.inv_cov
    output: "../output/agg-rnaseq-wf/sample_balltree.pkl"
    script: "scripts/sample_balltree.py"

################################################################################
# Genes
################################################################################

